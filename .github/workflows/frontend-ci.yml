name: Frontend Continuous Integration

on:
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.14'

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
      - name: Run linter
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.14'

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js 18.14
        uses: actions/setup-node@v3
        with:
          node-version: '18.14'

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Build Docker Image
        run: |
          docker build -t movie-picture-frontend:${{ github.sha }} .
          docker images